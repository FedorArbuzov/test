(function() {
  var AwardAnimation, Badge, Card, Helpers, h;

  Helpers = (function() {
    class Helpers {
      rand(min, max) {
        return Math.floor((Math.random() * ((max + 1) - min)) + min);
      }

      time(time) {
        return time * this.s;
      }

      isFF() {
        return navigator.userAgent.search("Firefox") > -1;
      }

      isIE9() {
        return navigator.userAgent.search("MSIE 9.0") > -1;
      }

      isSafari() {
        var ua;
        ua = void 0;
        ua = navigator.userAgent.toLowerCase();
        if (ua.indexOf("safari") !== -1) {
          if (ua.indexOf("chrome") > -1) {
            return false;
          } else {
            return true;
          }
        }
      }

      isIOS() {
        return navigator.userAgent.match(/(iPad|iPhone|iPod touch);.*CPU.*OS 7_\d/i);
      }

      elasticOut(k) {
        var a, p, s;
        a = 0.1;
        p = 0.4;
        if (k === 0) {
          return 0;
        }
        if (k === 1) {
          return 1;
        }
        if (!a || a < 1) {
          a = 1;
          s = p / 4;
        } else {
          s = p * Math.asin(1 / a) / (2 * Math.PI);
        }
        return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;
      }

    };

    Helpers.prototype.s = 1;

    return Helpers;

  }).call(this);

  h = new Helpers();

  Card = class Card {
    constructor(o) {
      this.o = o != null ? o : {};
      this.vars();
      this.run();
    }

    vars() {
      this.delay = this.o.delay || 0;
      this.s = 1 * h.time(1);
      return this.card = $('.award-container');
    }

    run() {
      return this.card.css({
        'transform-origin': 'center center'
      }).velocity({
        opacity: [1, 0],
        rotateY: [0, 85]
      }, {
        duration: 3000 * this.s,
        easing: 'easeOutCube'
      }).velocity({
        translateZ: [-60, 0]
      }, {
        delay: 400 * this.s,
        duration: 30
      }).velocity({
        translateZ: 0
      }, {
        duration: 400 * this.s,
        easing: 'easeOutElastic'
      });
    }

    out() {
      return this.card.css({
        'transform-origin': '10px 10px'
      }).velocity({
        rotateZ: [20, 0]
      }, {
        duration: 700 * this.s,
        easing: 'easeOutBack'
      }).velocity({
        translateY: [500, 0],
        translateX: [150, 0]
      }, {
        duration: 700 * this.s,
        easing: 'easeInExpo',
        display: 'none'
      });
    }

  };

  Badge = class Badge {
    constructor(o) {
      this.o = o != null ? o : {};
      this.vars();
      this.run();
    }

    vars() {
      this.delay = this.o.delay || {};
      this.s = 1 * h.time(1);
      this.badge = $('.badge-container');
      this.starburstContainer = $('.starbusrt-container');
      return this.starburst = $('.starbusrt-container > img');
    }

    run() {
      var impactVelocity, θ;
      impactVelocity = 100;
      θ = h.rand(0, 2 * Math.PI);
      this.badge.velocity({
        translateZ: [0, 400],
        translateY: [0, -40],
        rotateX: [0, 80],
        opacity: [1, 0]
      }, {
        duration: 3400 * this.s,
        easing: 'easeInCirc'
      }).velocity({
        translateX: [0, 500]
      }, {
        duration: 3000 * this.s,
        queue: false
      }).velocity({
        /*translateX: (impactVelocity * Math.cos(θ))
        translateY: (impactVelocity * Math.sin(θ))*/
        translateZ: -impactVelocity
      }, {
        duration: 30 * this.s
      }).velocity({
        /*translateX: (impactVelocity * Math.cos(θ-Math.PI))
        translateY: (impactVelocity * Math.sin(θ-Math.PI))*/
        translateZ: impactVelocity
      }, {
        duration: 30 * this.s
      }).velocity({
        translateZ: 0
      }, {
        duration: 400 * this.s,
        easing: 'easeOutElastic'
      });
      this.starburstContainer.velocity({
        scale: [1, 0],
        opacity: [1, 0]
      }, {
        display: 'inline-block',
        duration: 600 * this.s,
        delay: 3400 * this.s,
        easing: 'easeOutElastic'
      });
      return this.rotateStar();
    }

    rotateStar() {
      return this.starburst.velocity({
        rotateZ: [30, 0]
      }, {
        duration: 2000 * this.s,
        easing: 'linear',
        complete: () => {
          return this.rotateStar();
        }
      });
    }

  };

  AwardAnimation = class AwardAnimation {
    constructor() {
      this.card = new Card({
        delay: 0
      });
      this.badge = new Badge({
        delay: 0
      });
    }

    out() {
      return this.card.out();
    }

  };

  jQuery(document).ready(function() {
    var aa;
    aa = new AwardAnimation();
    return $('.award-container').click(function() {
      return aa.out();
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=coffeescript